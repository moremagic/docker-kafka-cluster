version: '2'
services:
  keycloak:
    image: jboss/keycloak
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/sample-realm.json
    volumes:
      - ./config/sample-realm.json:/tmp/sample-realm.json
    ports:
      - '8081:8080'

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
 
  broker-1:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker-1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      #offsets.commit.required.acks
      KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS: -1
      KAFKA_ACKS: -1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    depends_on:
      - zookeeper

  broker-2:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9093:9093'
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker-2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      #offsets.commit.required.acks
      KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS: -1
      KAFKA_ACKS: -1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    depends_on:
      - zookeeper

  broker-3:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9094:9094'
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://broker-3:19094,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      #offsets.commit.required.acks
      KAFKA_OFFSETS_COMMIT_REQUIRED_ACKS: -1
      KAFKA_ACKS: -1
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO
    depends_on:
      - zookeeper

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        micronaut:
          security:
            enabled: true
            redirect:
              logout: "http://${DOCKER_HOST_IP:-127.0.0.1}:8081/auth/realms/sample/protocol/openid-connect/logout"
            oauth2:
              enabled: true
              clients:
                keycloak:
                  client-id: "akhq"
                  openid:
                    issuer: "http://${DOCKER_HOST_IP:-127.0.0.1}:8081/auth/realms/sample"
                    configuration-path: "/.well-known/openid-configuration"
        akhq:
          security:
            default-group: no-roles
            oidc:
              enabled: true
              providers:
                keycloak:
                  label: "Login with Keycloak"
                  username-field: preferred_username
                  groups-field: akhq_roles
                  groups:
                    - name: role_admin
                      groups:
                        - admin
                    - name: role_all_reader
                      groups:
                        - reader
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "broker-1:19092,broker-2:19093,broker-3:19094"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
    ports:
      - 8080:8080
    links:
      - broker-1
      - broker-2
      - broker-3

