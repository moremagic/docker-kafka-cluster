x-var: &KAFKA_CLUSTER_ID
  'MbHDH0DcTSG_YE104u1iqA' # docker run -ti --rm confluentinc/cp-kafka:latest kafka-storage random-uuid

services:
  broker-1:
    image: confluentinc/cp-kafka:latest
    environment:
      CLUSTER_ID: *KAFKA_CLUSTER_ID 
      KAFKA_BROKER_ID: 100
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-1:29092,PLAINTEXT_HOST://broker-1:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 100
      KAFKA_CONTROLLER_QUORUM_VOTERS: '100@broker-1:29093,200@broker-2:29093,300@broker-3:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-1:29092,CONTROLLER://broker-1:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - ./config/scripts/update_run.sh:/tmp/update_run.sh
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  broker-2:
    image: confluentinc/cp-kafka:latest
    environment:
      CLUSTER_ID: *KAFKA_CLUSTER_ID 
      KAFKA_BROKER_ID: 200
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-2:29092,PLAINTEXT_HOST://broker-2:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 200
      KAFKA_CONTROLLER_QUORUM_VOTERS: '100@broker-1:29093,200@broker-2:29093,300@broker-3:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-2:29092,CONTROLLER://broker-2:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - ./config/scripts/update_run.sh:/tmp/update_run.sh
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  broker-3:
    image: confluentinc/cp-kafka:latest
    environment:
      CLUSTER_ID: *KAFKA_CLUSTER_ID 
      KAFKA_BROKER_ID: 300
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker-3:29092,PLAINTEXT_HOST://broker-3:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 300
      KAFKA_CONTROLLER_QUORUM_VOTERS: '100@broker-1:29093,200@broker-2:29093,300@broker-3:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker-3:29092,CONTROLLER://broker-3:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
      - ./config/scripts/update_run.sh:/tmp/update_run.sh
    command: "bash -c '/tmp/update_run.sh && /etc/confluent/docker/run'"

  kafka-ui:
    image: provectuslabs/kafka-ui
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=docker-kafka-cluster
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=broker-1:9092,broker-2:9092,broker-3:9092
    ports:
      - 8080:8080
    depends_on:
      - broker-1
      - broker-2
      - broker-3

  akhq:
    image: tchiotludo/akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-cluster:
              properties:
                bootstrap.servers: "broker-1:9092,broker-2:9092,broker-3:9092"
              schema-registry:
                url: "http://schema-registry:8085"
              connect:
                - name: "connect"
                  url: "http://connect:8083"
    ports:
      - 18080:8080
    depends_on:
      - broker-1
      - broker-2
      - broker-3
